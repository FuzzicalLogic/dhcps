module.exports = attribute;

function attribute(obj, name, options) {
	var fnChainable = chain.apply(obj, [
		options.initial,
		options.validator,
		options.onInvalid,
		options.onChange
	]);

	return Object.defineProperty(obj, name, {
		enumerable: !!options.enumerable,
		configurable: !!options.configurable,
		get: () => { return fnChainable; },
		set: fnChainable
	});
};

function chain(initial, fnValidate, onInvalid, onChange) {
	var current = initial,
		entangle = (v) => {
			var o = current;
			if (fnValidate(v)) {
				current = v;
				if ('string' === typeof onChange && onChange !== '')
					if (typeof this.emit === 'function')
						this.emit(onChange, v, o);
				return this;
			}
			return current;
		};

	return Object.defineProperties(entangle, {
	// Allow operators
		'valueOf': {
			value: () => { return current; }
		},
	// Align toString to value's type
		'toString': {
			value: () => { return current.toString(); }
		},
	// Allow for undefined values
		'undefine': {
			value: () => {
				current = undefined;
				return this;
			}
		}
	});
}
